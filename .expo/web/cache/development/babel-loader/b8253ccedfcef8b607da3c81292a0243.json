{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"sections\", \"style\", \"spacing\", \"fixed\", \"itemDimension\", \"staticDimension\", \"maxDimension\", \"renderItem\", \"keyExtractor\", \"onLayout\", \"additionalRowStyle\", \"itemContainerStyle\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\IT Office\\\\Desktop\\\\mySafaricomAppClone\\\\node_modules\\\\react-native-super-grid\\\\SectionGrid.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { forwardRef, memo, useCallback, useMemo, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport PropTypes from 'prop-types';\nimport { generateStyles, calculateDimensions, chunkArray } from \"./utils\";\nvar SectionGrid = memo(forwardRef(function (props, ref) {\n  var sections = props.sections,\n      style = props.style,\n      spacing = props.spacing,\n      fixed = props.fixed,\n      itemDimension = props.itemDimension,\n      staticDimension = props.staticDimension,\n      maxDimension = props.maxDimension,\n      originalRenderItem = props.renderItem,\n      keyExtractor = props.keyExtractor,\n      onLayout = props.onLayout,\n      externalRowStyle = props.additionalRowStyle,\n      itemContainerStyle = props.itemContainerStyle,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var _useState = useState(function () {\n    var defaultTotalDimension = staticDimension;\n\n    if (!staticDimension) {\n      defaultTotalDimension = maxDimension || Dimensions.get('window').width;\n    }\n\n    return defaultTotalDimension;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      totalDimension = _useState2[0],\n      setTotalDimension = _useState2[1];\n\n  var onLocalLayout = useCallback(function (e) {\n    if (!staticDimension) {\n      var _ref = e.nativeEvent.layout || {},\n          newTotalDimension = _ref.width;\n\n      if (maxDimension && newTotalDimension > maxDimension) {\n        newTotalDimension = maxDimension;\n      }\n\n      if (totalDimension !== newTotalDimension) {\n        setTotalDimension(newTotalDimension);\n      }\n    }\n\n    if (onLayout) {\n      onLayout(e);\n    }\n  }, [staticDimension, maxDimension, totalDimension, onLayout]);\n  var renderRow = useCallback(function (_ref2) {\n    var renderItem = _ref2.renderItem,\n        rowItems = _ref2.rowItems,\n        rowIndex = _ref2.rowIndex,\n        section = _ref2.section,\n        itemsPerRow = _ref2.itemsPerRow,\n        rowStyle = _ref2.rowStyle,\n        separators = _ref2.separators,\n        isFirstRow = _ref2.isFirstRow,\n        containerStyle = _ref2.containerStyle;\n    var additionalRowStyle = {};\n\n    if (isFirstRow) {\n      additionalRowStyle = {\n        marginTop: spacing\n      };\n    }\n\n    return React.createElement(View, {\n      style: [rowStyle, additionalRowStyle, externalRowStyle],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, rowItems.map(function (item, i) {\n      return React.createElement(View, {\n        key: keyExtractor ? keyExtractor(item, i) : \"item_\" + (rowIndex * itemsPerRow + i),\n        style: [containerStyle, itemContainerStyle],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, renderItem({\n        item: item,\n        index: rowIndex * itemsPerRow + i,\n        section: section,\n        separators: separators,\n        rowIndex: rowIndex\n      }));\n    }));\n  }, [spacing, keyExtractor, externalRowStyle, itemContainerStyle]);\n\n  var _useMemo = useMemo(function () {\n    return calculateDimensions({\n      itemDimension: itemDimension,\n      staticDimension: staticDimension,\n      totalDimension: totalDimension,\n      spacing: spacing,\n      fixed: fixed\n    });\n  }, [itemDimension, staticDimension, totalDimension, spacing, fixed]),\n      containerDimension = _useMemo.containerDimension,\n      itemsPerRow = _useMemo.itemsPerRow,\n      fixedSpacing = _useMemo.fixedSpacing;\n\n  var _useMemo2 = useMemo(function () {\n    return generateStyles({\n      itemDimension: itemDimension,\n      containerDimension: containerDimension,\n      spacing: spacing,\n      fixedSpacing: fixedSpacing,\n      fixed: fixed\n    });\n  }, [itemDimension, containerDimension, spacing, fixedSpacing, fixed]),\n      containerStyle = _useMemo2.containerStyle,\n      rowStyle = _useMemo2.rowStyle;\n\n  var groupSectionsFunc = useCallback(function (section) {\n    var chunkedData = chunkArray(section.data, itemsPerRow);\n\n    var _renderItem = section.renderItem || originalRenderItem;\n\n    return _objectSpread(_objectSpread({}, section), {}, {\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item,\n            index = _ref3.index,\n            section = _ref3.section;\n        return renderRow({\n          renderItem: _renderItem,\n          rowItems: item,\n          rowIndex: index,\n          section: section,\n          isFirstRow: index === 0,\n          itemsPerRow: itemsPerRow,\n          rowStyle: rowStyle,\n          containerStyle: containerStyle\n        });\n      },\n      data: chunkedData,\n      originalData: section.data\n    });\n  }, [itemsPerRow, originalRenderItem, renderRow, rowStyle, containerStyle]);\n  var groupedSections = sections.map(groupSectionsFunc);\n  var localKeyExtractor = useCallback(function (rowItems, index) {\n    if (keyExtractor) {\n      return rowItems.map(function (rowItem, rowItemIndex) {\n        return keyExtractor(rowItem, rowItemIndex);\n      }).join('_');\n    }\n\n    return \"row_\" + index;\n  }, [keyExtractor]);\n  return React.createElement(SectionList, _extends({\n    onLayout: onLocalLayout,\n    extraData: totalDimension,\n    sections: groupedSections,\n    keyExtractor: localKeyExtractor,\n    style: style,\n    ref: ref\n  }, restProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }));\n}));\nSectionGrid.displayName = 'SectionGrid';\nSectionGrid.propTypes = {\n  renderItem: PropTypes.func,\n  sections: PropTypes.arrayOf(PropTypes.any).isRequired,\n  itemDimension: PropTypes.number,\n  fixed: PropTypes.bool,\n  spacing: PropTypes.number,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  additionalRowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  itemContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticDimension: PropTypes.number,\n  onLayout: PropTypes.func,\n  listKey: PropTypes.string\n};\nSectionGrid.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  spacing: 10,\n  style: {},\n  additionalRowStyle: undefined,\n  itemContainerStyle: undefined,\n  staticDimension: undefined,\n  onLayout: null,\n  listKey: undefined\n};\nexport default SectionGrid;","map":{"version":3,"sources":["C:/Users/IT Office/Desktop/mySafaricomAppClone/node_modules/react-native-super-grid/SectionGrid.js"],"names":["React","forwardRef","memo","useCallback","useMemo","useState","PropTypes","generateStyles","calculateDimensions","chunkArray","SectionGrid","props","ref","sections","style","spacing","fixed","itemDimension","staticDimension","maxDimension","originalRenderItem","renderItem","keyExtractor","onLayout","externalRowStyle","additionalRowStyle","itemContainerStyle","restProps","defaultTotalDimension","Dimensions","get","width","totalDimension","setTotalDimension","onLocalLayout","e","nativeEvent","layout","newTotalDimension","renderRow","rowItems","rowIndex","section","itemsPerRow","rowStyle","separators","isFirstRow","containerStyle","marginTop","map","item","i","index","containerDimension","fixedSpacing","groupSectionsFunc","chunkedData","data","originalData","groupedSections","localKeyExtractor","rowItem","rowItemIndex","join","displayName","propTypes","func","arrayOf","any","isRequired","number","bool","oneOfType","object","array","listKey","string","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef, memo, useCallback, useMemo, useState,\n} from 'react';\nimport {\n  View, Dimensions, SectionList,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport { generateStyles, calculateDimensions, chunkArray } from './utils';\n\n\nconst SectionGrid = memo(\n  forwardRef((props, ref) => {\n    const {\n      sections,\n      style,\n      spacing,\n      fixed,\n      itemDimension,\n      staticDimension,\n      maxDimension,\n      renderItem: originalRenderItem,\n      keyExtractor,\n      onLayout,\n      additionalRowStyle: externalRowStyle,\n      itemContainerStyle,\n      ...restProps\n    } = props;\n\n    const [totalDimension, setTotalDimension] = useState(() => {\n      let defaultTotalDimension = staticDimension;\n\n      if (!staticDimension) {\n        defaultTotalDimension = maxDimension || Dimensions.get('window').width;\n      }\n\n      return defaultTotalDimension;\n    });\n\n    const onLocalLayout = useCallback(\n      (e) => {\n        if (!staticDimension) {\n          let { width: newTotalDimension } = e.nativeEvent.layout || {};\n\n          if (maxDimension && newTotalDimension > maxDimension) {\n            newTotalDimension = maxDimension;\n          }\n\n          if (totalDimension !== newTotalDimension) {\n            setTotalDimension(newTotalDimension);\n          }\n        }\n\n        // call onLayout prop if passed\n        if (onLayout) {\n          onLayout(e);\n        }\n      },\n      [staticDimension, maxDimension, totalDimension, onLayout],\n    );\n\n    const renderRow = useCallback(\n      ({\n        renderItem,\n        rowItems,\n        rowIndex,\n        section,\n        itemsPerRow,\n        rowStyle,\n        separators,\n        isFirstRow,\n        containerStyle,\n      }) => {\n        // Add spacing below section header\n        let additionalRowStyle = {};\n        if (isFirstRow) {\n          additionalRowStyle = {\n            marginTop: spacing,\n          };\n        }\n\n        return (\n          <View style={[rowStyle, additionalRowStyle, externalRowStyle]}>\n            {rowItems.map((item, i) => (\n              <View\n                key={\n                  keyExtractor\n                    ? keyExtractor(item, i)\n                    : `item_${rowIndex * itemsPerRow + i}`\n                }\n                style={[containerStyle, itemContainerStyle]}\n              >\n                {renderItem({\n                  item,\n                  index: rowIndex * itemsPerRow + i,\n                  section,\n                  separators,\n                  rowIndex,\n                })}\n              </View>\n            ))}\n          </View>\n        );\n      },\n      [spacing, keyExtractor, externalRowStyle, itemContainerStyle],\n    );\n\n    const { containerDimension, itemsPerRow, fixedSpacing } = useMemo(\n      () => calculateDimensions({\n        itemDimension,\n        staticDimension,\n        totalDimension,\n        spacing,\n        fixed,\n      }),\n      [itemDimension, staticDimension, totalDimension, spacing, fixed],\n    );\n\n    const { containerStyle, rowStyle } = useMemo(\n      () => generateStyles({\n        itemDimension,\n        containerDimension,\n        spacing,\n        fixedSpacing,\n        fixed,\n      }),\n      [itemDimension, containerDimension, spacing, fixedSpacing, fixed],\n    );\n\n    const groupSectionsFunc = useCallback(\n      (section) => {\n        const chunkedData = chunkArray(section.data, itemsPerRow);\n        const renderItem = section.renderItem || originalRenderItem;\n\n        return {\n          ...section,\n          renderItem: ({ item, index, section }) => renderRow({\n            renderItem,\n            rowItems: item,\n            rowIndex: index,\n            section,\n            isFirstRow: index === 0,\n            itemsPerRow,\n            rowStyle,\n            containerStyle,\n          }),\n          data: chunkedData,\n          originalData: section.data,\n        };\n      },\n      [\n        itemsPerRow,\n        originalRenderItem,\n        renderRow,\n        rowStyle,\n        containerStyle,\n      ],\n    );\n\n    const groupedSections = sections.map(groupSectionsFunc);\n\n    const localKeyExtractor = useCallback(\n      (rowItems, index) => {\n        if (keyExtractor) {\n          return rowItems\n            .map((rowItem, rowItemIndex) => keyExtractor(rowItem, rowItemIndex))\n            .join('_');\n        }\n        return `row_${index}`;\n      },\n      [keyExtractor],\n    );\n\n    return (\n      <SectionList\n        onLayout={onLocalLayout}\n        extraData={totalDimension}\n        sections={groupedSections}\n        keyExtractor={localKeyExtractor}\n        style={style}\n        ref={ref}\n        {...restProps}\n      />\n    );\n  }),\n);\n\n\nSectionGrid.displayName = 'SectionGrid';\n\nSectionGrid.propTypes = {\n  renderItem: PropTypes.func,\n  sections: PropTypes.arrayOf(PropTypes.any).isRequired,\n  itemDimension: PropTypes.number,\n  fixed: PropTypes.bool,\n  spacing: PropTypes.number,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  additionalRowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  itemContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticDimension: PropTypes.number,\n  onLayout: PropTypes.func,\n  listKey: PropTypes.string,\n};\n\nSectionGrid.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  spacing: 10,\n  style: {},\n  additionalRowStyle: undefined,\n  itemContainerStyle: undefined,\n  staticDimension: undefined,\n  onLayout: null,\n  listKey: undefined,\n};\n\n\nexport default SectionGrid;\n"]},"metadata":{},"sourceType":"module"}